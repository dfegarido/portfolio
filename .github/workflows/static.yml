# Simple workflow for deploying static content to GitHub Pages
name: Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["prod"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Testing 
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '16.15.1'
      - name: Install dependencies
        run: yarn
      - name: Run tests
        run: CI=true yarn test
  # Build and Deploy
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Setup directories
        run: |
          rm -rfv ./docs/ || true
          mkdir -p ./docs/
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '16.15.1'
      - name: Install dependencies
        run: yarn
      - name: Run build
        run: CI=false yarn build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './docs/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
